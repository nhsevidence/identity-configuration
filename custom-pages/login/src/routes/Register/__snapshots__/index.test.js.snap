// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register components should render <Register /> correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Register />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h6>
          Your email address should be your work email address if you have one.
        </h6>,
        <Fieldset
          legend="Personal Information"
        >
          <Input
            error={false}
            errorMessage="Please provide a valid email"
            label="Email"
            name="email"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="eg: your.name@example.com..."
            type="email"
          />
          <Input
            error={false}
            errorMessage="Email fields do not match"
            label="Confirm Email"
            name="confirmEmail"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder="eg: your.name@example.com..."
            type="email"
          />
          <Input
            error={false}
            errorMessage="Please provide a password"
            label="Password"
            name="password"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            type="password"
          />
          <Input
            error={false}
            errorMessage="Password fields do not match"
            label="Confirm Password"
            name="confirmPassword"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            type="password"
          />
          <Input
            error={false}
            errorMessage="Name should not exceed 100 characters"
            label="Name"
            name="name"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
          />
          <Input
            error={false}
            errorMessage="Surname should not exceed 100 characters"
            label="Surname"
            name="surname"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
          />
          <ul>
            <h5>
              Cookies will be used in the following ways:
            </h5>
            <li>
              Analytical purposes – for monitoring usage of the NICE websites in order to improve our services
            </li>
            <li>
              Your preferences – to remember what you view on our websites and to enable us to tailor our services to you
            </li>
          </ul>
          <Fieldset
            classNane="checkboxFieldset"
            legend="Audience Insight Community - Get involved"
          >
            <Checkbox
              checked={false}
              label="The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community"
              name="allowContactMe"
              onChange={[Function]}
            />
          </Fieldset>
          <Fieldset
            classNane="checkboxFieldset"
            legend="Terms and conditions"
          >
            <Checkbox
              checked={false}
              label="By signing up, you agree to our terms of service and privacy policy."
              name="tAndC"
              onChange={[Function]}
            />
          </Fieldset>
          <Alert>
            The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our 
            <a
              href="#"
            >
              privacy notice
            </a>
          </Alert>
          <button
            className="btn btn--cta"
            disabled={true}
            onClick={[Function]}
          >
            Register
          </button>
        </Fieldset>,
      ],
      "className": "",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Your email address should be your work email address if you have one.",
        },
        "ref": null,
        "rendered": "Your email address should be your work email address if you have one.",
        "type": "h6",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Input
              error={false}
              errorMessage="Please provide a valid email"
              label="Email"
              name="email"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="eg: your.name@example.com..."
              type="email"
            />,
            <Input
              error={false}
              errorMessage="Email fields do not match"
              label="Confirm Email"
              name="confirmEmail"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="eg: your.name@example.com..."
              type="email"
            />,
            <Input
              error={false}
              errorMessage="Please provide a password"
              label="Password"
              name="password"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="password"
            />,
            <Input
              error={false}
              errorMessage="Password fields do not match"
              label="Confirm Password"
              name="confirmPassword"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="password"
            />,
            <Input
              error={false}
              errorMessage="Name should not exceed 100 characters"
              label="Name"
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
            />,
            <Input
              error={false}
              errorMessage="Surname should not exceed 100 characters"
              label="Surname"
              name="surname"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
            />,
            <ul>
              <h5>
                Cookies will be used in the following ways:
              </h5>
              <li>
                Analytical purposes – for monitoring usage of the NICE websites in order to improve our services
              </li>
              <li>
                Your preferences – to remember what you view on our websites and to enable us to tailor our services to you
              </li>
            </ul>,
            <Fieldset
              classNane="checkboxFieldset"
              legend="Audience Insight Community - Get involved"
            >
              <Checkbox
                checked={false}
                label="The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community"
                name="allowContactMe"
                onChange={[Function]}
              />
            </Fieldset>,
            <Fieldset
              classNane="checkboxFieldset"
              legend="Terms and conditions"
            >
              <Checkbox
                checked={false}
                label="By signing up, you agree to our terms of service and privacy policy."
                name="tAndC"
                onChange={[Function]}
              />
            </Fieldset>,
            <Alert>
              The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our 
              <a
                href="#"
              >
                privacy notice
              </a>
            </Alert>,
            <button
              className="btn btn--cta"
              disabled={true}
              onClick={[Function]}
            >
              Register
            </button>,
          ],
          "legend": "Personal Information",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": false,
              "errorMessage": "Please provide a valid email",
              "label": "Email",
              "name": "email",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "placeholder": "eg: your.name@example.com...",
              "type": "email",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": false,
              "errorMessage": "Email fields do not match",
              "label": "Confirm Email",
              "name": "confirmEmail",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "placeholder": "eg: your.name@example.com...",
              "type": "email",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": false,
              "errorMessage": "Please provide a password",
              "label": "Password",
              "name": "password",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": false,
              "errorMessage": "Password fields do not match",
              "label": "Confirm Password",
              "name": "confirmPassword",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
              "type": "password",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": false,
              "errorMessage": "Name should not exceed 100 characters",
              "label": "Name",
              "name": "name",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "error": false,
              "errorMessage": "Surname should not exceed 100 characters",
              "label": "Surname",
              "name": "surname",
              "onBlur": [Function],
              "onChange": [Function],
              "onFocus": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h5>
                  Cookies will be used in the following ways:
                </h5>,
                <li>
                  Analytical purposes – for monitoring usage of the NICE websites in order to improve our services
                </li>,
                <li>
                  Your preferences – to remember what you view on our websites and to enable us to tailor our services to you
                </li>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cookies will be used in the following ways:",
                },
                "ref": null,
                "rendered": "Cookies will be used in the following ways:",
                "type": "h5",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Analytical purposes – for monitoring usage of the NICE websites in order to improve our services",
                },
                "ref": null,
                "rendered": "Analytical purposes – for monitoring usage of the NICE websites in order to improve our services",
                "type": "li",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Your preferences – to remember what you view on our websites and to enable us to tailor our services to you",
                },
                "ref": null,
                "rendered": "Your preferences – to remember what you view on our websites and to enable us to tailor our services to you",
                "type": "li",
              },
            ],
            "type": "ul",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Checkbox
                checked={false}
                label="The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community"
                name="allowContactMe"
                onChange={[Function]}
              />,
              "classNane": "checkboxFieldset",
              "legend": "Audience Insight Community - Get involved",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "checked": false,
                "label": "The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community",
                "name": "allowContactMe",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Checkbox
                checked={false}
                label="By signing up, you agree to our terms of service and privacy policy."
                name="tAndC"
                onChange={[Function]}
              />,
              "classNane": "checkboxFieldset",
              "legend": "Terms and conditions",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "checked": false,
                "label": "By signing up, you agree to our terms of service and privacy policy.",
                "name": "tAndC",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                "The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our ",
                <a
                  href="#"
                >
                  privacy notice
                </a>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "privacy notice",
                  "href": "#",
                },
                "ref": null,
                "rendered": "privacy notice",
                "type": "a",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Register",
              "className": "btn btn--cta",
              "disabled": true,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Register",
            "type": "button",
          },
        ],
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h6>
            Your email address should be your work email address if you have one.
          </h6>,
          <Fieldset
            legend="Personal Information"
          >
            <Input
              error={false}
              errorMessage="Please provide a valid email"
              label="Email"
              name="email"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="eg: your.name@example.com..."
              type="email"
            />
            <Input
              error={false}
              errorMessage="Email fields do not match"
              label="Confirm Email"
              name="confirmEmail"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              placeholder="eg: your.name@example.com..."
              type="email"
            />
            <Input
              error={false}
              errorMessage="Please provide a password"
              label="Password"
              name="password"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="password"
            />
            <Input
              error={false}
              errorMessage="Password fields do not match"
              label="Confirm Password"
              name="confirmPassword"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              type="password"
            />
            <Input
              error={false}
              errorMessage="Name should not exceed 100 characters"
              label="Name"
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
            />
            <Input
              error={false}
              errorMessage="Surname should not exceed 100 characters"
              label="Surname"
              name="surname"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
            />
            <ul>
              <h5>
                Cookies will be used in the following ways:
              </h5>
              <li>
                Analytical purposes – for monitoring usage of the NICE websites in order to improve our services
              </li>
              <li>
                Your preferences – to remember what you view on our websites and to enable us to tailor our services to you
              </li>
            </ul>
            <Fieldset
              classNane="checkboxFieldset"
              legend="Audience Insight Community - Get involved"
            >
              <Checkbox
                checked={false}
                label="The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community"
                name="allowContactMe"
                onChange={[Function]}
              />
            </Fieldset>
            <Fieldset
              classNane="checkboxFieldset"
              legend="Terms and conditions"
            >
              <Checkbox
                checked={false}
                label="By signing up, you agree to our terms of service and privacy policy."
                name="tAndC"
                onChange={[Function]}
              />
            </Fieldset>
            <Alert>
              The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our 
              <a
                href="#"
              >
                privacy notice
              </a>
            </Alert>
            <button
              className="btn btn--cta"
              disabled={true}
              onClick={[Function]}
            >
              Register
            </button>
          </Fieldset>,
        ],
        "className": "",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Your email address should be your work email address if you have one.",
          },
          "ref": null,
          "rendered": "Your email address should be your work email address if you have one.",
          "type": "h6",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Input
                error={false}
                errorMessage="Please provide a valid email"
                label="Email"
                name="email"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="eg: your.name@example.com..."
                type="email"
              />,
              <Input
                error={false}
                errorMessage="Email fields do not match"
                label="Confirm Email"
                name="confirmEmail"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                placeholder="eg: your.name@example.com..."
                type="email"
              />,
              <Input
                error={false}
                errorMessage="Please provide a password"
                label="Password"
                name="password"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="password"
              />,
              <Input
                error={false}
                errorMessage="Password fields do not match"
                label="Confirm Password"
                name="confirmPassword"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="password"
              />,
              <Input
                error={false}
                errorMessage="Name should not exceed 100 characters"
                label="Name"
                name="name"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
              />,
              <Input
                error={false}
                errorMessage="Surname should not exceed 100 characters"
                label="Surname"
                name="surname"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
              />,
              <ul>
                <h5>
                  Cookies will be used in the following ways:
                </h5>
                <li>
                  Analytical purposes – for monitoring usage of the NICE websites in order to improve our services
                </li>
                <li>
                  Your preferences – to remember what you view on our websites and to enable us to tailor our services to you
                </li>
              </ul>,
              <Fieldset
                classNane="checkboxFieldset"
                legend="Audience Insight Community - Get involved"
              >
                <Checkbox
                  checked={false}
                  label="The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community"
                  name="allowContactMe"
                  onChange={[Function]}
                />
              </Fieldset>,
              <Fieldset
                classNane="checkboxFieldset"
                legend="Terms and conditions"
              >
                <Checkbox
                  checked={false}
                  label="By signing up, you agree to our terms of service and privacy policy."
                  name="tAndC"
                  onChange={[Function]}
                />
              </Fieldset>,
              <Alert>
                The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our 
                <a
                  href="#"
                >
                  privacy notice
                </a>
              </Alert>,
              <button
                className="btn btn--cta"
                disabled={true}
                onClick={[Function]}
              >
                Register
              </button>,
            ],
            "legend": "Personal Information",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": false,
                "errorMessage": "Please provide a valid email",
                "label": "Email",
                "name": "email",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "placeholder": "eg: your.name@example.com...",
                "type": "email",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": false,
                "errorMessage": "Email fields do not match",
                "label": "Confirm Email",
                "name": "confirmEmail",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "placeholder": "eg: your.name@example.com...",
                "type": "email",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": false,
                "errorMessage": "Please provide a password",
                "label": "Password",
                "name": "password",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": false,
                "errorMessage": "Password fields do not match",
                "label": "Confirm Password",
                "name": "confirmPassword",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
                "type": "password",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": false,
                "errorMessage": "Name should not exceed 100 characters",
                "label": "Name",
                "name": "name",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "error": false,
                "errorMessage": "Surname should not exceed 100 characters",
                "label": "Surname",
                "name": "surname",
                "onBlur": [Function],
                "onChange": [Function],
                "onFocus": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h5>
                    Cookies will be used in the following ways:
                  </h5>,
                  <li>
                    Analytical purposes – for monitoring usage of the NICE websites in order to improve our services
                  </li>,
                  <li>
                    Your preferences – to remember what you view on our websites and to enable us to tailor our services to you
                  </li>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Cookies will be used in the following ways:",
                  },
                  "ref": null,
                  "rendered": "Cookies will be used in the following ways:",
                  "type": "h5",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Analytical purposes – for monitoring usage of the NICE websites in order to improve our services",
                  },
                  "ref": null,
                  "rendered": "Analytical purposes – for monitoring usage of the NICE websites in order to improve our services",
                  "type": "li",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Your preferences – to remember what you view on our websites and to enable us to tailor our services to you",
                  },
                  "ref": null,
                  "rendered": "Your preferences – to remember what you view on our websites and to enable us to tailor our services to you",
                  "type": "li",
                },
              ],
              "type": "ul",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Checkbox
                  checked={false}
                  label="The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community"
                  name="allowContactMe"
                  onChange={[Function]}
                />,
                "classNane": "checkboxFieldset",
                "legend": "Audience Insight Community - Get involved",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checked": false,
                  "label": "The Audience Insight Community helps NICE improve its products and services - please tick this box if you would like to get involved. Find out more about the Audience Insight Community",
                  "name": "allowContactMe",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Checkbox
                  checked={false}
                  label="By signing up, you agree to our terms of service and privacy policy."
                  name="tAndC"
                  onChange={[Function]}
                />,
                "classNane": "checkboxFieldset",
                "legend": "Terms and conditions",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "checked": false,
                  "label": "By signing up, you agree to our terms of service and privacy policy.",
                  "name": "tAndC",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  "The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our ",
                  <a
                    href="#"
                  >
                    privacy notice
                  </a>,
                ],
              },
              "ref": null,
              "rendered": Array [
                "The information you provide on this form will be used by us to administer your NICE account. For more information about how we process your data, see our ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "privacy notice",
                    "href": "#",
                  },
                  "ref": null,
                  "rendered": "privacy notice",
                  "type": "a",
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Register",
                "className": "btn btn--cta",
                "disabled": true,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Register",
              "type": "button",
            },
          ],
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFourteenAdapter {
      "options": Object {
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "prevContext": true,
          },
          "getChildContext": Object {
            "calledByRenderer": true,
          },
        },
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
